@inject SweetAlertService Swal

@if (Model is null)
{
    <p>Cargando...</p>
    return;
}
<div class="row">
    <div class="col-md-6">
        <EditForm Model="Model" OnValidSubmit="OnSave">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3">
                <input @bind-value="Model.NombreCompleto" class="form-control" placeholder="Juan Perez" id="nombre" />
                <label for="nombre" class="form-label">Nombre Completo</label>
                <ValidationMessage For="() => Model.NombreCompleto" />
            </div>
            <div class="form-floating mb-3">
                <input @bind-value="Model.NroDocumento" class="form-control" id="nroDocumento" />
                <label for="nroDocumento" class="form-label">Nro. Documento</label>
                <ValidationMessage For="() => Model.NroDocumento" />
            </div>
            <div class="form-floating mb-3">
                <input @bind-value="Model.Telefono" class="form-control" id="telefono" />
                <label for="telefono" class="form-label">Teléfono</label>
                <ValidationMessage For="() => Model.Telefono" />
            </div>
            <div class="form-floating mb-3">
                <input class="form-control" id="email" value="@Correo" readonly />
                <label for="email" class="form-label">Correo</label>
            </div>
            <div class="form-floating mb-1">
                <select class="form-select" @onchange="OnDepartamentoSelected" id="comboDpto">
                    <option>-Seleccione-</option>
                    @foreach (var item in Departamentos)
                    {
                        <option value="@item.Codigo">@item.Nombre</option>
                    }
                </select>
                <label for="comboDpto" class="form-label">Departamento</label>
            </div>
            <div class="form-floating mb-1">
                <select class="form-select" id="comboProvincia" @onchange="OnProvinciaSelected">
                    <option>-Seleccione-</option>
                    @foreach (var item in Provincias)
                    {
                        <option value="@item.Codigo">@item.Nombre</option>
                    }
                </select>
                <label for="comboProvincia" class="form-label">Provincia</label>
            </div>
            <div class="form-floating mb-1">
                <InputSelect class="form-select" id="comboDistrito" @bind-Value="Model.Distrito">
                    <option>-Seleccione-</option>
                    @foreach (var item in Distritos)
                    {
                        <option value="@item.Codigo">@item.Nombre</option>
                    }
                </InputSelect>
                <label for="comboDistrito" class="form-label">Distrito</label>
            </div>
            <ValidationSummary />
            <button type="submit" class="w-100 btn btn-lg btn-primary">Guardar cambios</button>
        </EditForm>
    </div>
</div>


@code {

    [Parameter]
    public UpdateProfileDtoRequest? Model { get; set; }

    [Parameter]
    public EventCallback OnGrabar { get; set; }

    [Parameter]
    public ICollection<DepartamentoModel> Departamentos { get; set; } = new List<DepartamentoModel>();

    [Parameter]
    public ICollection<ProvinciaModel> Provincias { get; set; } = new List<ProvinciaModel>();

    [Parameter]
    public ICollection<DistritoModel> Distritos { get; set; } = new List<DistritoModel>();

    [Parameter]
    public EventCallback<ChangeEventArgs> OnDepartamentoSelected { get; set; }

    [Parameter]
    public EventCallback<ChangeEventArgs> OnProvinciaSelected { get; set; }

    private string Correo => Model?.Email ?? string.Empty;

    private async Task OnSave()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions("Actualizar cuenta")
            {
                Icon = SweetAlertIcon.Question,
                Text = "¿Está seguro de proceder?",
                ConfirmButtonText = "Sí",
                CancelButtonText = "No",
                ShowCancelButton = true,
                AllowEnterKey = true
            });

        if (result.IsConfirmed)
        {
            await OnGrabar.InvokeAsync();
        }
    }


}