@inject SweetAlertService Swal

@if (Model is null)
{
    <p>Cargando....</p>
    return;
}
<div class="row">
    <div class="col-md-6">
        <EditForm Model="Model" OnValidSubmit="OnSave">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3">
                <input type="password" @bind-value="Model.OldPassword" class="form-control" id="oldPassword" />
                <label for="oldPassword" class="form-label">Clave Actual</label>
                <ValidationMessage For="() => Model.OldPassword" />
            </div>
            <div class="form-floating mb-3">
                <input type="password" @bind-value="Model.NewPassword" class="form-control" id="new-password" />
                <label for="new-password" class="form-label">Clave Nueva</label>
                <ValidationMessage For="() => Model.NewPassword" />
            </div>
            <div class="form-floating mb-3">
                <input type="password" @bind-value="Model.ConfirmPassword" class="form-control" id="confirmarpassword" />
                <label for="confirmarpassword" class="form-label">Confirme la Clave</label>
                <ValidationMessage For="() => Model.ConfirmPassword" />
            </div>
            <ValidationSummary />
            <button type="submit" class="w-100 btn btn-lg btn-primary">Cambiar Clave</button>
        </EditForm>
    </div>

</div>

@code {

    [Parameter]
    public ChangePasswordDtoRequest? Model { get; set; } 

    [Parameter]
    public EventCallback OnGrabar { get; set; }

    private async Task OnSave()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions("Actualizar cuenta")
            {
                Icon = SweetAlertIcon.Question,
                Text = "¿Está seguro de proceder?",
                ConfirmButtonText = "Sí",
                CancelButtonText = "No",
                ShowCancelButton = true,
                AllowEnterKey = true
            });

        if (result.IsConfirmed)
        {
            await OnGrabar.InvokeAsync();
        }
    }
}